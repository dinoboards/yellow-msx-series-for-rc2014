
RESTART	EQU	$0000			; CP/M & MSX-DOS RESTART VECTOR

	ORG	$100

	LD	HL, SP			; CAPTURE CURRENT HI MEMORY INTO HL
	DI				; DISABLE INTERRUPTS
	DEC	HL			; PROTECT TOP MEM

; #ifdef PAGEALIGN
; 	LD	L, 0
; 	LD	DE, PADDING
; 	ADD	HL, DE
; #endif

	PUSH	HL
	POP	IX
	LD	DE, HL

	LD	HL, APPEND - 1
	LD	BC, APPSIZE
	LDDR

	EX	DE, HL
	LD	SP, HL			; ASSIGN STACK TO JUST BELOW RELOCATED APP

	INC	HL
	PUSH	HL			; CAPTURE START POINT IN IX
	POP	IX

	LD	DE, $100		; ADJUST ADDRESS AS PER RELOCATION BITMAP
	OR	A
	SBC	HL, DE
	EX	DE, HL

	PUSH	IX

	LD	HL, RELOC + 2
	LD	BC, (RELOC)

LOOP:
	CALL	TRANSPOSE

	DEC	BC
	LD	A, B
	OR	C
	JR	NZ, LOOP

	POP	IX
	EI				; RE-ENABLE INTERRUPTS
	JP	(IX)

TRANSPOSE:
	PUSH	BC

	LD	B, 8
	LD	A, (HL)
NEXT:
	RLCA
	JR	NC, SKIP

	push	hl
	LD	L, (IX)
	LD	H, (IX + 1)
	ADD	HL, DE
	LD	(IX), L
	LD	(IX + 1), H
	pop	hl

SKIP:
	INC	IX
	DEC	B
	JR	NZ, NEXT

	POP	BC
	INC	HL
	RET

RELOC:
BINARY	"./bin/relocation-map.bin"
RELOCSIZE:	EQU	ASMPC - RELOC


APP:
BINARY "./bin/base100.bin"
APPEND:
APPSIZE:	EQU	ASMPC - APP

if (((ASMPC - APP) % 256))
PADDING:	EQU 	((ASMPC - APP) % 256) - 257
else
PADDING		EQU	-1
endif
