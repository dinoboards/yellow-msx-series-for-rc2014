
; V9958 REGISTERS
VDP_DATA:       equ     $98             ; VDP data port (VRAM read/write)
VDP_ADDR:       equ     $99             ; VDP address (write only)
VDP_STAT:       equ     $99             ; VDP status (read only)
VDP_PALT:       equ     $9A             ; VDP palette latch (write only)
VDP_REGS:       equ     $9B             ; VDP register access (write only)


; MSX BIOS CALLS
FORCLR	EQU	$0F3E9
BAKCLR	EQU	$0F3EA
BDRCLR	EQU	$0F3EB
CHGCLR	EQU	$00062
INIT32	EQU	$00006
CALSLT	EQU	$0001C
EXPTBL	EQU	$0FCC1
INITXT	equ 	$6C
LINL40	equ	$0F3AE
CHGMOD	equ	$05f
INIPLT	equ	$00141

RAMAD0	equ	0F341h	; Slot of the Main-Ram on page 0~3FFFh
EXTBIO	equ	0ffcah	; Call address to an extended Bios
RDSLT	EQU	0000CH

; I GOT CAUGHT WITH THE FOSSIL DOCUMENTATION BEING AMBIGUOUS AS TO
; WHERE THE MARKER/JUMP TABLE ADDRESSES ARE TO BE STORED
; SEE UUPDATE DOC msx/rc2014-extended/docs/fossilspec.md FOR MORE DETAILS.
; ANY PREVIOUSLY COMPLILED APPS WILL CONTINUE TO WORK WITH INCORRECT ADDRESSES
; BUT ANY NEWLY COMPILED APPS WILL NOW USE THE CORRECT ADDRESSES.

FSMARK	EQU	$F3FC		; CONTAINS "RS" IF INSTALLED AND ACTIVE
FSTABL	EQU	$F3FE		; FOSSIL JUMP TABLE ADDRESS

CHPUT			EQU	$00A2	; CHARACTER OUTPUT

EXTBIO_RC2014					EQU	214

EXTBIO_RC2014_GET_VERSION_FN			EQU	0
EXTBIO_RC2014_INSTALL_FOSSIL_INCORRECT_FN	EQU	1
EXTBIO_RC2014_SIO_GET_CLOCK_FN			EQU	2
EXTBIO_RC2014_SIO_SET_CLOCK_FN			EQU	3
EXTBIO_RC2014_SIO_GET_PRESENT_FN		EQU	4
EXTBIO_RC2014_INSTALL_FOSSIL_FN			EQU	5

EXTBIO_RC2014_HELLO_FN				EQU	0x7F

EXTBIO_RC2014_USB_GET_PRESENT_FN		EQU	0x81
EXTBIO_RC2014_USB_CONTROL_TRANSFER_FN		EQU	0x82
EXTBIO_RC2014_USB_OUT_TRANSFER_FN		EQU	0x83
EXTBIO_RC2014_USB_IN_TRANSFER_FN		EQU	0x84
EXTBIO_RC2014_USB_IN_TRANSFER_N_FN		EQU	0x85

EXTBIO_RC2014_USB_FTDI_FN				EQU	0x86
EXTBIO_RC2014_USB_FTDI_READ_DATA_SUB_FN			EQU	1
EXTBIO_RC2014_USB_FTDI_SET_BAUDRATE_SUB_FN		EQU	2
EXTBIO_RC2014_USB_FTDI_SET_LINE_PROPERTY2_SUB_FN	EQU	3
EXTBIO_RC2014_USB_FTDI_PURGE_RX_BUFFER_SUB_FN		EQU	4
EXTBIO_RC2014_USB_FTDI_PURGE_TX_BUFFER_SUB_FN		EQU	5

EXTBIO_RC2014_SERIAL_FN				EQU	0x87
EXTBIO_RC2014_SERIAL_GET_AVAILABLE_PORTS_FN	EQU	1
EXTBIO_RC2014_SERIAL_GET_DRIVER_NAME_SUB_FN	EQU	2
EXTBIO_RC2014_SERIAL_RESET_SUB_FN		EQU	3
EXTBIO_RC2014_SERIAL_SET_PROTOCOL_SUB_FN	EQU	4
EXTBIO_RC2014_SERIAL_SET_BAUDRATE_SUB_FN	EQU	5
EXTBIO_RC2014_SERIAL_SET_FLOW_CONTROL_SUB_FN	EQU	6
EXTBIO_RC2014_SERIAL_SET_DTR_SUB_FN		EQU	7
EXTBIO_RC2014_SERIAL_SET_RTS_SUB_FN		EQU	8
EXTBIO_RC2014_SERIAL_READ_SUB_FN		EQU	9
EXTBIO_RC2014_SERIAL_WRITE_SUB_FN		EQU	10
EXTBIO_RC2014_SERIAL_PURGE_BUFFERS_SUB_FN	EQU	11

EXTBIO_UNAPI					EQU	0x2222
EXTBIO_UNAPI_GET_RAM_HELPER_FN			EQU	0xFF


RS_HOKVLD:	EQU	$FB20		; (1 BYTE)  BIT 0 - EXTENDED BIOS INSTALLED

; called at start of interrupt subroutine, when it is clear that
; the interrupt is from the VDP
H_TIMI:         equ     $FD9F

; allows for installation of expansion devices that contain extra OS subroutines
H_BEXT:         equ     $FFCA

	SECTION	CODE

	MACRO MARSHAL count, fn
	LOCAL	LOOP_CTRL
	EX	AF, AF'

	LD	BC, count
	ADD	HL, BC
	LD	B, C
LOOP_CTRL:
	DEC	HL
	LD	A, (HL)
	PUSH	AF
	INC	SP
	DJNZ	LOOP_CTRL

	CALL	fn

	REPT count/2
	POP	AF
	ENDR

	IF (count % 2) != 0
	INC	SP
	ENDIF

	ENDM
