	include	"msx.inc"

	PUBLIC	_extbio
	PUBLIC	_extbio_next

	EXTERN	__ftdi_read_data
	EXTERN	_ftdi_set_baudrate
	EXTERN	_ftdi_set_line_property2
	EXTERN	_ftdi_purge_rx_buffer
	EXTERN	_ftdi_purge_tx_buffer

	SECTION	CODE

_extbio:
	PUSH	AF
	LD	A, D
	CP	E
	JR	Z, EXBIO_EXIT

	CP	EXTBIO_RC2014
	JR	Z, handle_extbio

EXBIO_EXIT:
	POP	AF
	DB	$C3	; JP opcode
_extbio_next:
	DW	0

handle_extbio:
	LD	A, E
	CP	EXTBIO_RC2014_USB_FTDI_FN
	JR	NZ, EXBIO_EXIT

EXTBIO_RC2014_USB_FTDI:
	LD	A, C
	CP	EXTBIO_RC2014_USB_FTDI_READ_DATA_SUB_FN
	JR	Z, EXTBIO_RC2014_USB_FTDI_READ_DATA_SUB

	CP	EXTBIO_RC2014_USB_FTDI_SET_BAUDRATE_SUB_FN
	JR	Z, EXTBIO_RC2014_USB_FTDI_SET_BAUDRATE_SUB

	CP	EXTBIO_RC2014_USB_FTDI_SET_LINE_PROPERTY2_SUB_FN
	JR	Z, EXTBIO_RC2014_USB_FTDI_SET_LINE_PROPERTY2_SUB

	CP	EXTBIO_RC2014_USB_FTDI_PURGE_RX_BUFFER_SUB_FN
	JR	Z, EXTBIO_RC2014_USB_FTDI_PURGE_RX_BUFFER_SUB

	CP	EXTBIO_RC2014_USB_FTDI_PURGE_TX_BUFFER_SUB_FN
	JR	Z, EXTBIO_RC2014_USB_FTDI_PURGE_TX_BUFFER_SUB

	LD	HL, -1	; UNKNOWN SUB FUNCTION
	POP	AF
	RET

	MACRO MARSHAL count, fn
	LOCAL	LOOP_CTRL
	POP	AF

	LD	BC, count
	ADD	HL, BC
	LD	B, C
LOOP_CTRL:
	DEC	HL
	LD	A, (HL)
	PUSH	AF
	INC	SP
	DJNZ	LOOP_CTRL

	CALL	fn

	REPT count/2
	POP	AF
	ENDR

	IF (count % 2) != 0
	fail
	ENDIF

	RET

	ENDM

EXTBIO_RC2014_USB_FTDI_READ_DATA_SUB:
	POP	AF
	JP	__ftdi_read_data

EXTBIO_RC2014_USB_FTDI_SET_BAUDRATE_SUB:
	MARSHAL 6, _ftdi_set_baudrate

EXTBIO_RC2014_USB_FTDI_SET_LINE_PROPERTY2_SUB:
	MARSHAL 4, _ftdi_set_line_property2

EXTBIO_RC2014_USB_FTDI_PURGE_RX_BUFFER_SUB:
	MARSHAL 2, _ftdi_purge_rx_buffer

EXTBIO_RC2014_USB_FTDI_PURGE_TX_BUFFER_SUB:
	MARSHAL 2, _ftdi_purge_tx_buffer

	PUBLIC	_timi
	PUBLIC	_timi_next

_timi:
	DB	$C3	; JP opcode
_timi_next:
	DW	0

	SECTION	DATA

	PUBLIC	_helloworld
_helloworld:
	DB	"ftdi\r\n", 0

