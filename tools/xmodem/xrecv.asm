

	include	"bdos.inc"
	include "cbios.inc"
	include "sio.inc"
	include "ascii.inc"

PCKT_RETRY_COUNT:	EQU	20
PCKT_WAIT_COUNT:	EQU	140

	ORG	$0100

	LD	SP, STACK

	LD	DE, MSG_NOTICE
	BDOSFN	STROUT

	; COPY SIO HIGHPAGE CODE TO UPPER PAGE
	LD	DE, HIGHPAGEADDR
	LD	HL, HIGHPAGE
	LD	BC, HIGHPAGESIZE
	LDIR

	DISABLE_VDP_INTERRUPTS
	INSTALL_INTERRUPT_HANDLER
	SIO_INIT

	; HAS A FILENAME BEEN SUPPLIED?
	LD	A, (DFCB+1)
	CP	' '
	JP	Z, ERR.ARG_NO_FILENAME

	; IF SO, LETS DELETE IT
	ld  	DE, DFCB		; Delete file first
	BDOSFN	FDEL

	; AND RECREATE IT
	LD  	DE, DFCB
	XOR	A
	LD	(DFCB.CR), A
	BDOSFN	FMAKE
	OR	A
	JP	NZ, ERR.CREATE_FAILED



	; BEGIN XMODEM PROTOCOL

	LD 	A, 1		; INITIALISE FIRST PCKT NUMBER
	LD 	(PCKT_NO), A
	CPL
	LD 	(PCKT_NO_CPL),A

	LD 	A, NAK		; REQUEST NEXT PACKET
	SIO_SNDBYT

GET_PCKT:
	LD	A, PCKT_RETRY_COUNT
	LD 	(PCKT_RETRY), A

GP_LP1:
	LD 	B, PCKT_WAIT_COUNT
	CALL	GET_BYTE
	JR 	NC, RCV_PCKT

GET_PCKT_RTRY:
	LD	HL, PCKT_RETRY
	DEC 	(HL)
	JP 	Z, ERR.NO_DATA

	LD	E, '!'
	BDOSFN	CONOUT

	; GOBBLE UP ALL DATA UNTIL
	; TO RESYNC DATA STREAM
GET_PCKT_GOBBLE:
	LD 	B, PCKT_WAIT_COUNT
	CALL	GET_BYTE
	JR 	NC, GET_PCKT_GOBBLE


	LD 	A, NAK		; SEND NAK AGAIN TO RETRY
	SIO_SNDBYT
	JR 	GP_LP1

RCV_PCKT:
	CP	EOT
	JP	Z, FINISH

	CP	CAN
	JP	Z, CANCEL

	CP	SOH
	JR	NZ, GP_LP1	; TODO WAIT FOR NO BYTES READY, THEN RESEND NAK

	LD	HL, BUFFER
	LD	(HL), A		; STORE THE SOH????
	INC 	HL

	LD 	B, 131		; PACKET LENGTH
RCV_PCKT_BDY:
	EXX
	LD 	B, 1
	CALL	GET_BYTE
	EXX
	JR	C, GET_PCKT_RTRY

	LD	(HL), A
	INC 	HL
	DJNZ	RCV_PCKT_BDY

	LD	E, '.'
	BDOSFN	CONOUT

	; VERIFY PACKET WITH CHECKSUM
	LD	HL, BUFFER.PCKT_BDY
	LD	B, 128
	XOR	A

	; SUM ALL PACKET BYTES
RCV_PCKT_BDY1:
	ADD	A, (HL)
	INC	HL
	DJNZ	RCV_PCKT_BDY1

	; COMPARE CHECK SUMS
	CP	(HL)
	JR	NZ, GET_PCKT_RTRY

RCV_PCKT_BDY2:
	; COMPARE PCKT NUMBERS
	LD	A, (PCKT_NO)
	LD	C, A
	LD	A, (BUFFER.PCKT_NO)
	CP	C
	JR	NZ, GET_PCKT_RTRY

	; COMPARE PCKT NUMBER COMPLEMENT
	LD	A, (PCKT_NO_CPL)
	LD	C, A
	LD	A, (BUFFER.PCKT_NO_CPL)
	CP	C
	JR	NZ, GET_PCKT_RTRY

	LD 	A, ACK
	SIO_SNDBYT

	LD	DE, BUFFER.PCKT_BDY
	BDOSFN	SETDTA

	LD  	DE, DFCB
	BDOSFN	WRSEQ
	CP	0
	JP	NZ, ERR.FILE_WRITE

	LD	HL, PCKT_NO
	LD	A, (HL)
	INC	A
	LD	(HL), A
	INC	HL			; PCKT_NO_CPL
	CPL
	LD	(HL), A

	JP	GET_PCKT


; RETREIVE NEXT BYTE
; WAIT PERIOD IN B
; RETURNS BYTE IN A, WITH C FLAG CLEARED, OTHERWISE C FLAG IS SET
GET_BYTE:
	LD	C, 255
	INC	BC

GET_BYTE1:
	SIO_RCVRDY
	OR	A
	JP 	NZ, SIO_RCBBYT

	EX	(SP), HL	; SLEEP A BIT
	EX	(SP), HL
	NOP
	NOP
	NOP

	DEC	BC
	LD	A, B
	OR	C
	JR	NZ, GET_BYTE1

	SCF			; SET C TO INDICATE NO BYTE RECIEVED
	RET

; FORMAT AND PRINT FILENAME IN THE DEFAULT FILE CONTROL BLOCK
PRT_FILENAME:
	LD	A, (DFCB)	; DRIVE
	OR	A
	JR	Z, NO_DRIVE
	ADD	A, '@'
	LD	E, A
	BDOSFN	CONOUT

	LD	E, ':'
	BDOSFN	CONOUT

NO_DRIVE:
	LD	HL, DFCB.FNAME
	LD	B, 8
	CALL	PRT_TRIM

	LD	E, '.'
	BDOSFN	CONOUT

	LD	HL, DFCB.EXT
	LD 	B, 3
;
; PRINT STRING AT HL, TRIMING SPACES
; B - IS STRING LENGTH
PRT_TRIM:
	PUSH	BC
	PUSH	HL
	LD	A, (HL)
	LD	E, A
	LD	C, CONOUT
	CP	' '		; SKIP SPACES
	CALL	NZ, BDOS
	POP	HL
	POP	BC
	INC	HL
	DJNZ	PRT_TRIM
	RET

CANCEL:
	LD	DE, MSG.CANCELLED
	BDOSFN	STROUT
	JR	EXIT

ERR.ARG_NO_FILENAME:
	LD	DE, MSG.NO_FILENAME
	BDOSFN	STROUT
	JR	EXIT

ERR.CREATE_FAILED:
	LD	DE, MSG.FAILED_CREATE
	BDOSFN	STROUT
	CALL	PRT_FILENAME
	LD	DE, MSG.NEWLINE
	BDOSFN	STROUT
	JR	EXIT

ERR.FILE_WRITE:
	LD	DE, MSG.FAILED_FILE_WRITE
	BDOSFN	STROUT
	JR	EXIT

ERR.NO_DATA:
	LD	DE, MSG.FAILED_NO_DATA
	BDOSFN	STROUT
	JR	EXIT

ERR.PACKET_CHKSUM:
	LD	DE, MSG.FAILED_CHKSUM
	BDOSFN	STROUT
	JR	EXIT

FINISH:
	LD  	DE, DFCB
	BDOSFN	FCLOSE

	LD	A, ACK
	SIO_SNDBYT

	LD	DE, MSG.SUCCESS
	BDOSFN	STROUT
	CALL	PRT_FILENAME
	LD	DE, MSG.NEWLINE
	BDOSFN	STROUT

EXIT:
	DISABLE_SIO_INTERRUPTS
	REMOVE_INTERRUPT_HANDLER
	ENABLE_VDP_INTERRUPTS
	JP	TERM0

	include	"sio.asm"
	; include	"debug.asm"

MSG_NOTICE:
	DB	"MSX/RC2014 SIO Xmodem receive v0.2\r\n$"

MSG.CANCELLED:
	DB	"\r\nDownload was cancelled\r\n$"

MSG.NO_FILENAME:
	DB	"Must supply filename to save\r\n$"

MSG.FAILED_CREATE:
	DB	"Failed to create file: $"

MSG.FAILED_FILE_WRITE:
	DB	"\r\nFailed to write to file\r\n$"

MSG.FAILED_CHKSUM:
	DB	"\r\nFailed checksum verification\r\n$"

MSG.FAILED_NO_DATA:
	DB	"\r\nNo data received\r\n$"

MSG.SUCCESS:
	DB	"\r\nSucceeded with download of file: $"

MSG.NEWLINE:
	DB	"\r\n$"

; Variables:
PCKT_NO:		DB	1	; Current packet number
PCKT_NO_CPL:		DB	254	; Ones complement of current packet number
PCKT_RETRY:		DB	0

BUFFER:			DB	0	; SOH MARKER
BUFFER.PCKT_NO:		DB	0	; CURRENT RECEIVED PCKTS NUMBER
BUFFER.PCKT_NO_CPL:	DB	0	; CURRENT RECEIVED PCKTS CPL
BUFFER.PCKT_BDY:	DS	128, 0	; PACKET DATA
			DB	0	; PACKET'S CHECKSUM

STACKSTART:
	DS 	256
STACK:	EQU	$

HIGHPAGE:
	include "highpage.sym"
	incbin	"highpage.bin"

HIGHPAGESIZE:	EQU	$ - HIGHPAGE


